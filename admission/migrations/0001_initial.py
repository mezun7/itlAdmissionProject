# Generated by Django 3.1.7 on 2022-03-15 17:23

import admission.helpers.validators_files
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='', validators=[django.core.validators.FileExtensionValidator(['pdf', 'jpeg', 'jpg', 'png'], message='Запрещенный формат файла.'), admission.helpers.validators_files.file_size], verbose_name='Файл')),
            ],
        ),
        migrations.CreateModel(
            name='FileType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Тип файла')),
            ],
        ),
        migrations.CreateModel(
            name='FirstTourDates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Дата первого тура')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Класс')),
                ('have_profile', models.BooleanField(default=False, verbose_name='Есть профиль?')),
            ],
        ),
        migrations.CreateModel(
            name='Moderator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Olympiad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Профиль обучения')),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantRegistrator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фото профиля')),
                ('first_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Фамилия')),
                ('fathers_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Дата рождения абитуриента')),
                ('place_of_birth', models.CharField(blank=True, max_length=100, null=True, verbose_name='Место рождения абитуриента')),
                ('school', models.CharField(blank=True, max_length=100, null=True, verbose_name='Школа')),
                ('fio_mother', models.CharField(blank=True, max_length=100, null=True, verbose_name='ФИО мамы')),
                ('fio_father', models.CharField(blank=True, max_length=100, null=True, verbose_name='ФИО отца')),
                ('phone_mother', models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер телефона одного из родителей')),
                ('phone_father', models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер телефона одного из родителей')),
                ('out_of_competition', models.BooleanField(blank=True, default=False, null=True, verbose_name='Вне конкурса?')),
                ('reg_status', models.IntegerField(default=3, verbose_name='Статус регистрации')),
                ('activation_key', models.CharField(blank=True, max_length=500, null=True, verbose_name='Ключ активации')),
                ('key_expires', models.DateTimeField(blank=True, null=True, verbose_name='Срок действие ключа истекает')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Мужской'), ('F', 'Женский')], max_length=1, null=True, verbose_name='Пол')),
                ('phone_party', models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер телефона абитуриента')),
                ('lives', models.CharField(blank=True, max_length=100, null=True, verbose_name='Город проживания')),
                ('portfolio_text', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Список дипломов?')),
                ('privilege_status', models.CharField(blank=True, choices=[('N', 'Не проверено'), ('R', 'Отклонено'), ('A', 'Принято')], max_length=1, null=True, verbose_name='Статус проверки льготы')),
                ('date_privilege_check', models.DateTimeField(blank=True, null=True, verbose_name='Дата проверки')),
                ('is_dublicate', models.BooleanField(default=False, verbose_name='Дубликат?')),
                ('is_checked', models.BooleanField(default=False, verbose_name='Проверен на дублирование?')),
                ('olymp_coming_status', models.CharField(default='N', max_length=2, verbose_name='Статус прихода')),
                ('first_tour_come_date', models.DateTimeField(blank=True, null=True, verbose_name='Пришел')),
                ('extra_score', models.IntegerField(blank=True, null=True, verbose_name='Дополнительные баллы')),
                ('first_tour_register_date', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admission.firsttourdates', verbose_name='Выбранная дата 1 тура')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admission.group', verbose_name='Класс обучения')),
                ('moderator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admission.moderator', verbose_name='Кто проверил')),
                ('portfolio', models.ManyToManyField(blank=True, null=True, to='admission.File', verbose_name='Портфолио')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admission.profile', verbose_name='Профиль обучения')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='ModeratorMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Сообщение')),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('verdict', models.CharField(choices=[('N', 'Не проверено'), ('R', 'Отклонено'), ('A', 'Принято')], max_length=2, verbose_name='Вердикт')),
                ('moderator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.moderator', verbose_name='Проверено')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.participant', verbose_name='Участник')),
            ],
        ),
        migrations.AddField(
            model_name='file',
            name='file_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admission.filetype', verbose_name='Тип файла'),
        ),
    ]
