# Generated by Django 3.1.7 on 2022-03-15 17:23

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('admission', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddLiter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='', verbose_name='Файл')),
                ('tour_ordering', models.IntegerField(verbose_name='Очередность тура')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Полное имя предмета')),
                ('short_name', models.CharField(max_length=10, verbose_name='Короткое имя предмета')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название тура')),
                ('is_final_tour', models.BooleanField(default=False, verbose_name='Финальный тур?')),
                ('results_release_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата опубликования результатов')),
                ('tour_order', models.IntegerField(verbose_name='Какой по счету тур?')),
                ('final_result_release_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата опубликования финальных результатов')),
                ('appeal_application_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата закрытия доступа к аппелляции')),
                ('appeal_url', models.CharField(blank=True, max_length=500, null=True, verbose_name='Ссылка на апелляцию')),
                ('grade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='admission.group', verbose_name='Класс')),
                ('parent_tour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='first_tour.tour', verbose_name='Предыдущий тур')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admission.profile', verbose_name='Профиль')),
            ],
            options={
                'verbose_name': 'Тур',
                'verbose_name_plural': 'Туры',
            },
        ),
        migrations.CreateModel(
            name='UserAppeal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_absent_appeal', models.BooleanField(blank=True, null=True, verbose_name='Пропустил аппелляцию')),
                ('appeal_reason', models.CharField(max_length=2000, verbose_name='Причина аппелляции')),
                ('appeal_apply_time', models.DateTimeField(default=datetime.datetime(2022, 3, 15, 17, 23, 33, 919769), verbose_name='Время подачи заявления')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.participant', verbose_name='Абитуриент')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first_tour.tour', verbose_name='Тур')),
            ],
        ),
        migrations.CreateModel(
            name='TourUploadFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tour_order', models.IntegerField(blank=True, null=True)),
                ('file', models.FileField(upload_to='', verbose_name='Файл')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='first_tour.subject', verbose_name='Предмет')),
                ('tour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='first_tour.tour', verbose_name='Тур')),
            ],
        ),
        migrations.CreateModel(
            name='NextTourPass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_pass', models.CharField(choices=[('R', 'Резерв'), ('P', 'Прошел')], max_length=2, verbose_name='Прошел?')),
                ('has_come', models.BooleanField(default=False, verbose_name='Пришел?')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.participant', verbose_name='Абитуриент')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first_tour.tour', verbose_name='Тур')),
            ],
        ),
        migrations.CreateModel(
            name='NextTourParticipantUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='', verbose_name='Файл')),
                ('type_of_pass', models.CharField(blank=True, choices=[('R', 'Резерв'), ('P', 'Прошел')], max_length=5, null=True, verbose_name='Тип прохождения')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first_tour.tour', verbose_name='Тур')),
            ],
        ),
        migrations.CreateModel(
            name='LiterGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='Литер')),
                ('participants', models.ManyToManyField(blank=True, to='admission.Participant', verbose_name='Ученики')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first_tour.tour', verbose_name='Тур')),
            ],
        ),
        migrations.CreateModel(
            name='ExamSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_scoring', models.CharField(choices=[('S', 'Балл'), ('R', 'Рекомендация'), ('Z', 'Зачет')], max_length=10, verbose_name='Тип оценивания')),
                ('max_score', models.IntegerField(verbose_name='Максимальный балл')),
                ('passing_score', models.IntegerField(verbose_name='Проходной балл')),
                ('ordering', models.IntegerField(default=100, verbose_name='Позиция в столбце')),
                ('min_score', models.IntegerField(default=0, verbose_name='Минимальный балл')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first_tour.subject', verbose_name='Предмет')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first_tour.tour', verbose_name='Тур')),
            ],
            options={
                'verbose_name': 'Предмет-экзамен',
                'verbose_name_plural': 'Предметы на экзамены',
            },
        ),
        migrations.CreateModel(
            name='AppealUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first_tour.tour', verbose_name='Тур')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Пользователя',
                'verbose_name_plural': 'Пользователи на аппеляцию',
            },
        ),
        migrations.CreateModel(
            name='UploadConfirm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pps', models.FileField(upload_to='confirm/pps', validators=[django.core.validators.FileExtensionValidator(['pdf', 'jpeg', 'jpg', 'png'], message='Запрещенный формат файла.')], verbose_name='Согласие на психолого-педагогическое сбеседование')),
                ('agreement_tour', models.FileField(upload_to='confirm/agreement', validators=[django.core.validators.FileExtensionValidator(['pdf', 'jpeg', 'jpg', 'png'], message='Запрещенный формат файла.')], verbose_name='Согласие на участие во 2 туре вступительных испытаний')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.participant', verbose_name='Абитуриент')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first_tour.tour', verbose_name='Тур')),
            ],
            options={
                'unique_together': {('participant', 'tour')},
            },
        ),
        migrations.CreateModel(
            name='TourParticipantScan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scan_file_name', models.CharField(max_length=500, verbose_name='Скан работы')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.participant', verbose_name='Абитуриент')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first_tour.tour', verbose_name='Тур')),
            ],
            options={
                'unique_together': {('participant', 'tour')},
            },
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(verbose_name='Набранный балл')),
                ('comment', models.CharField(blank=True, max_length=500, null=True, verbose_name='Комментарий')),
                ('appeal_application', models.CharField(blank=True, choices=[('N', 'Не заявился'), ('Z', 'Заявился')], max_length=10, null=True, verbose_name='Заявился на аппеляцию?')),
                ('appeal_reason', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Причина аппеляции')),
                ('appeal_score', models.FloatField(blank=True, null=True, verbose_name='Аппелляционный балл')),
                ('is_absent_appeal', models.BooleanField(default=False, verbose_name='Отсутствовал на аппелляции')),
                ('appeal_time', models.DateTimeField(blank=True, null=True, verbose_name='Время аппелляции')),
                ('appeal_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='first_tour.appealuser', verbose_name='Учителя аппеллирующий')),
                ('exam_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='first_tour.examsubject', verbose_name='Предмет')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.participant', verbose_name='Абитуриент')),
            ],
            options={
                'verbose_name': 'Результат экзамена',
                'verbose_name_plural': 'Результаты экзаменов',
                'unique_together': {('participant', 'exam_subject')},
            },
        ),
    ]
